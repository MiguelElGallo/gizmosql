apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: {{ include "gizmosql.fullname" . }}-server
  labels:
    {{- include "gizmosql.labels" . | nindent 4 }}
    app: gizmosql-server
spec:
  replicas: 1
  selector:
    matchLabels:
      {{- include "gizmosql.selectorLabels" . | nindent 6 }}
      app: gizmosql-server
  serviceName: gizmosql
  template:
    metadata:
      annotations:
        checksum/config: {{ include (print $.Template.BasePath "/global-secret.yaml") . | sha256sum }}
        {{- with .Values.gizmoSQLServer.podAnnotations }}
          {{- toYaml . | nindent 8 }}
        {{- end }}
      labels:
        {{- include "gizmosql.selectorLabels" . | nindent 8 }}
        app: gizmosql-server
    spec:
      {{- with .Values.gizmoSQLServer.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        {{- toYaml .Values.gizmoSQLServer.podSecurityContext | nindent 8 }}
      volumes:
# See: https://aws.amazon.com/blogs/containers/eks-persistent-volumes-for-instance-store/ for details on using local NVMe for supported nodes
# Uncomment the following lines to mount the local NVMe disk as a data volume
#        - name: nvme-volume
#          hostPath:
#            # directory location on host
#            path: /nvme/disk
#            # this field is optional
#            type: Directory
        - name: tls-volume
          secret:
            secretName: {{ include "gizmosql.fullname" . }}-tls-secret
            optional: true
# Uncomment the following lines to mount the local NVMe disk as a data volume
#      initContainers:
#        - name: volume-mount-chmod
#          image: busybox
#          command: [ "sh", "-c", "chmod 777 /data" ]
#          volumeMounts:
#            - name: nvme-volume
#              mountPath: /data
      containers:
        - name: gizmosql
          volumeMounts:
# Uncomment the following lines to mount the local NVMe disk as a data volume
#            - name: nvme-volume
#              mountPath: /opt/gizmosql/data
            - name: tls-volume
              mountPath: /opt/gizmosql/tls
              readOnly: true
          env:
            - name: DATABASE_BACKEND
              value: duckdb
            - name: DATABASE_FILENAME
              value: {{ .Values.gizmoSQLServer.config.DATABASE_FILENAME }}
            - name: GIZMOSQL_PASSWORD
              valueFrom:
                secretKeyRef:
                  name: {{ include "gizmosql.fullname" . }}-secret
                  key: GIZMOSQL_PASSWORD
                  optional: false
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "gizmosql.fullname" . }}-secret
                  key: AWS_ACCESS_KEY_ID
                  optional: true
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "gizmosql.fullname" . }}-secret
                  key: AWS_SECRET_ACCESS_KEY
                  optional: true
            - name: AWS_SESSION_TOKEN
              valueFrom:
                secretKeyRef:
                  name: {{ include "gizmosql.fullname" . }}-secret
                  key: AWS_SESSION_TOKEN
                  optional: true
            - name: AWS_DEFAULT_REGION
              valueFrom:
                secretKeyRef:
                  name: {{ include "gizmosql.fullname" . }}-secret
                  key: AWS_DEFAULT_REGION
                  optional: true
          securityContext:
            {{- toYaml .Values.gizmoSQLServer.securityContext | nindent 12 }}
          image: "{{ .Values.gizmoSQLServer.image.repository }}:{{ .Values.gizmoSQLServer.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.gizmoSQLServer.image.pullPolicy }}
          ports:
            - name: gizmosql-port
              containerPort: {{ .Values.gizmoSQLServer.service.port }}
              protocol: TCP
#          livenessProbe:
#            httpGet:
#              path: /
#              port: http
#          readinessProbe:
#            httpGet:
#              path: /
#              port: http
          resources:
            {{- toYaml .Values.gizmoSQLServer.resources | nindent 12 }}
      {{- with .Values.gizmoSQLServer.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.gizmoSQLServer.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.gizmoSQLServer.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
